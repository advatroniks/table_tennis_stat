from aiogram import Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage

from bot.states.registration_states import PlayerRegistrationState
from bot.states.add_game_states import AddGameStates
from bot.database.registration_db import check_registration_user
from bot.database.postgresql_connect import conn
from bot.keyboards.office_keyboard import main_office_keyboard, moderator_office_keyboard, administrator_office_keyboard
from aiogram.dispatcher import FSMContext
from bot.database.office_db import get_win_loses_statistics
from dotenv import load_dotenv
import os


storage = MemoryStorage()

load_dotenv('.env')
ADMIN = os.getenv('ADMIN')

HELP_COMMAND_STRING = '''
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/reg_user - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
/add_game - –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É
/cancel - –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
/description - –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ 
/office - –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
'''


ADD_TYPE_GAME_INFORMATION = """
–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä—ã:
*–ë—ã—Å—Ç—Ä—ã–π - —Ç–æ–ª—å–∫–æ –∏—Ç–æ–≥–æ–≤—ã–π —Å—á–µ—Ç
*–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π - —É–∫–∞–∑–∞–Ω–∏–µ —Å—á–µ—Ç–∞ –≤ –∫–∞–∂–¥–æ–º —Å–µ—Ç–µ
"""

async def cmd_start(message: types.Message) -> None:
    """
        –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç.
    """
    reply_text = ''' 
    –ü—Ä–∏–≤–µ—Ç, %s!
    –ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –∏–∑—É—á–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
    /help
    ''' % message.from_user.first_name

    await message.answer(
        text=reply_text
    )


async def cmd_registration(message: types.Message) -> None:
    """ –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç State >> Registration """
    if await check_registration_user(message.from_user.id,conn.cursor()):
        await message.answer(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è. ')
        await PlayerRegistrationState.reg_name.set()
    else:
        await message.answer('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã!')


async def cmd_cancel(message: types.Message, state=FSMContext) -> None:
    await message.reply(text='–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞! ')
    await state.reset_data()
    data = await state.get_data()
    await state.finish()
    print(data)


async def cmd_description(message: types.Message) -> None:
    await message.answer('–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞')


async def cmd_help(message: types.Message) -> None:
    await message.reply(text=HELP_COMMAND_STRING)

async def cmd_add_game(message: types.Message) -> None:
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é —Å–æ–ø–µ—Ä–Ω–∏–∫–∞! ')
    await AddGameStates.select_rival.set()


async def cmd_open_office(message: types.Message) -> None:
    if message.from_user.id == int(ADMIN):
        keyboard = administrator_office_keyboard(moderator_office_keyboard(main_office_keyboard()))
    else:
        keyboard = main_office_keyboard()

    text = await get_win_loses_statistics(callback=message)
    interim_str = ''
    list_emodji = 'üèì‚úÖ‚ùå'
    count = 0
    for i in text:
        interim_str += i + list_emodji[count]
        count += 1

    result_string = '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:' + interim_str


    await message.answer(text=result_string,
                         reply_markup=keyboard)

89028066003
def registrate_main_commands(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –∫–æ–º–º–∞–Ω–¥
    """

    dp.register_message_handler(cmd_start, commands=['start'])
    dp.register_message_handler(cmd_registration, commands=['registration'])
    dp.register_message_handler(cmd_cancel, commands=['cancel'], state='*')
    dp.register_message_handler(cmd_description, commands=['description'])
    dp.register_message_handler(cmd_help, commands=['help'])
    dp.register_message_handler(cmd_add_game, commands=['add_game'])
    dp.register_message_handler(cmd_open_office,commands=['office'])
